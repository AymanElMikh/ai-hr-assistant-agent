# run.py

import os
from rh_interviewer import create_app
from rh_interviewer.config import DevelopmentConfig, ProductionConfig
from dotenv import load_dotenv

# 1. Charger les variables d'environnement
# Ceci est n√©cessaire pour que Flask puisse acc√©der √† FLASK_ENV, OPENAI_API_KEY, etc.
# üéØ DIAGNOSTIC: On r√©cup√®re l'√©tat de l'environnement AVANT et APR√àS.

load_dotenv()

# 2. D√©terminer la configuration
# Lis la variable d'environnement FLASK_ENV. Par d√©faut, utilise Development.
FLASK_ENV = os.getenv('FLASK_ENV', 'development')

if FLASK_ENV == 'production':
    Config = ProductionConfig
    print("üåç Lancement en mode PRODUCTION.")
else:
    Config = DevelopmentConfig
    print("üíª Lancement en mode D√âVELOPPEMENT.")

# 3. Cr√©er l'application
# Utilise votre Application Factory pour construire l'application
app = create_app(config_class=Config)

# 4. Point d'entr√©e pour le serveur de d√©veloppement
if __name__ == '__main__':
    # R√©cup√©rer le port configur√©
    port = app.config.get('PORT', 5000)
    
    # Lancement du serveur de d√©veloppement Flask
    print(f"üîó Serveur lanc√© sur http://127.0.0.1:{port}")
    app.run(
        host='0.0.0.0', # √âcoute toutes les interfaces
        port=port,
        debug=app.config.get('FLASK_DEBUG', False),
        use_reloader=app.config.get('FLASK_DEBUG', False) 
    )